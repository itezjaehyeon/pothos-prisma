// @fxts/core : 0.8.0
import {
    append,
    chunk,
    compact,
    compress,
    concat,
    concurrent,
    cycle,
    difference,
    differenceBy,
    drop,
    dropRight,
    dropUntil,
    dropWhile,
    entries,
    filter,
    flat,
    flatMap,
    intersection,
    intersectionBy,
    keys,
    map,
    peek,
    pluck,
    prepend,
    range,
    reject,
    repeat,
    reverse,
    scan,
    slice,
    split,
    take,
    takeUntil,
    takeRight,
    takeWhile,
    toAsync,
    uniq,
    uniqBy,
    values,
    zip,
    zipWith,
    zipWithIndex,
    add,
    apply,
    average,
    average as mean,
    compactObject,
    consume,
    countBy,
    curry,
    delay,
    each,
    every,
    evolve,
    find,
    findIndex,
    fromEntries,
    groupBy,
    gt,
    gte,
    head,
    head as first,
    identity,
    includes,
    includes as contains,
    indexBy,
    isArray,
    isEmpty,
    isNil,
    isNumber,
    isObject,
    isString,
    isUndefined,
    join,
    juxt,
    last,
    lt,
    lte,
    max,
    min,
    noop,
    not,
    nth,
    omit,
    omitBy,
    partition,
    pick,
    pickBy,
    pipe,
    pipe1,
    reduce,
    size,
    some,
    sort,
    sortBy,
    sum,
    tap,
    toArray,
    unicodeToArray,
} from "@fxts/core";

const L = {
    append,
    chunk,
    compact,
    compress,
    concat,
    concurrent,
    cycle,
    difference,
    differenceBy,
    drop,
    dropRight,
    dropUntil,
    dropWhile,
    entries,
    filter,
    flat,
    flatMap,
    intersection,
    intersectionBy,
    keys,
    map,
    peek,
    pluck,
    prepend,
    range,
    reject,
    repeat,
    reverse,
    scan,
    slice,
    split,
    take,
    takeUntil,
    takeRight,
    takeWhile,
    toAsync,
    uniq,
    uniqBy,
    values,
    zip,
    zipWith,
    zipWithIndex,
} as const;

const S = {
    add,
    apply,
    average,
    mean,
    compactObject,
    consume,
    countBy,
    curry,
    delay,
    each,
    every,
    evolve,
    find,
    findIndex,
    fromEntries,
    groupBy,
    gt,
    gte,
    head,
    first,
    identity,
    includes,
    contains,
    indexBy,
    isArray,
    isEmpty,
    isNil,
    isNumber,
    isObject,
    isString,
    isUndefined,
    join,
    juxt,
    last,
    lt,
    lte,
    max,
    min,
    noop,
    not,
    nth,
    omit,
    omitBy,
    partition,
    pick,
    pickBy,
    pipe,
    pipe1,
    reduce,
    size,
    some,
    sort,
    sortBy,
    sum,
    tap,
    toArray,
    unicodeToArray,
} as const;

export { L, S };
